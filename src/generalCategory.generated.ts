// Unicode 6.2.0 General_Category
// Derived from: http://www.unicode.org/Public/6.2.0/ucd/extracted/DerivedGeneralCategory.txt
import { CharSet, ReadonlyCharSet } from "chardata-charset";

export const Cc = Object.freeze(CharSet.fromStartLengthArray([0,31,127,32]));
export { Cc as Control };
export { Cc as cntrl };
export const Cf = Object.freeze(CharSet.fromStartLengthArray([173,0,1536,4,1757,0,1807,0,8203,4,8234,4,8288,4,8298,5,65279,0,65529,2,69821,0,119155,7,917505,0,917536,95]));
export { Cf as Format };
export const Cn = Object.freeze(CharSet.fromStartLengthArray([888,1,895,4,907,0,909,0,930,0,1320,8,1367,1,1376,0,1416,0,1419,3,1424,0,1480,7,1515,4,1525,10,1541,0,1564,1,1806,0,1867,1,1970,13,2043,4,2094,1,2111,0,2140,1,2143,64,2209,0,2221,54,2303,0,2424,0,2432,0,2436,0,2445,1,2449,1,2473,0,2481,0,2483,2,2490,1,2501,1,2505,1,2511,7,2520,3,2526,0,2532,1,2556,4,2564,0,2571,3,2577,1,2601,0,2609,0,2612,0,2615,0,2618,1,2621,0,2627,3,2633,1,2638,2,2642,6,2653,0,2655,6,2678,10,2692,0,2702,0,2706,0,2729,0,2737,0,2740,0,2746,1,2758,0,2762,0,2766,1,2769,14,2788,1,2802,14,2820,0,2829,1,2833,1,2857,0,2865,0,2868,0,2874,1,2885,1,2889,1,2894,7,2904,3,2910,0,2916,1,2936,9,2948,0,2955,2,2961,0,2966,2,2971,0,2973,0,2976,2,2981,2,2987,2,3002,3,3011,2,3017,0,3022,1,3025,5,3032,13,3067,5,3076,0,3085,0,3089,0,3113,0,3124,0,3130,2,3141,0,3145,0,3150,6,3159,0,3162,5,3172,1,3184,7,3200,1,3204,0,3213,0,3217,0,3241,0,3252,0,3258,1,3269,0,3273,0,3278,6,3287,6,3295,0,3300,1,3312,0,3315,14,3332,0,3341,0,3345,0,3387,1,3397,0,3401,0,3407,7,3416,7,3428,1,3446,2,3456,1,3460,0,3479,2,3506,0,3516,0,3518,1,3527,2,3531,3,3541,0,3543,0,3552,17,3573,11,3643,3,3676,36,3715,0,3717,1,3721,0,3723,1,3726,5,3736,0,3744,0,3748,0,3750,0,3752,1,3756,0,3770,0,3774,1,3781,0,3783,0,3790,1,3802,1,3808,31,3912,0,3949,3,3992,0,4029,0,4045,0,4059,36,4294,0,4296,4,4302,1,4681,0,4686,1,4695,0,4697,0,4702,1,4745,0,4750,1,4785,0,4790,1,4799,0,4801,0,4806,1,4823,0,4881,0,4886,1,4955,1,4989,2,5018,5,5109,10,5789,2,5873,14,5901,0,5909,10,5943,8,5972,11,5997,0,6001,0,6004,11,6110,1,6122,5,6138,5,6159,0,6170,5,6264,7,6315,4,6390,9,6429,2,6444,3,6460,3,6465,2,6510,1,6517,10,6572,3,6602,5,6619,2,6684,1,6751,0,6781,1,6794,5,6810,5,6830,81,6988,3,7037,2,7156,7,7224,2,7242,2,7296,63,7368,7,7415,8,7655,20,7958,1,7966,1,8006,1,8014,1,8024,0,8026,0,8028,0,8030,0,8062,1,8117,0,8133,0,8148,1,8156,0,8176,1,8181,0,8191,0,8293,4,8306,1,8335,0,8349,2,8379,20,8433,14,8586,5,9204,11,9255,24,9291,20,9984,0,11085,2,11098,165,11311,0,11359,0,11508,4,11558,0,11560,4,11566,1,11624,6,11633,13,11671,8,11687,0,11695,0,11703,0,11711,0,11719,0,11727,0,11735,0,11743,0,11836,67,11930,0,12020,11,12246,25,12284,3,12352,0,12439,1,12544,4,12590,2,12687,0,12731,4,12772,11,12831,0,13055,0,19894,9,40909,50,42125,2,42183,8,42540,19,42648,6,42744,7,42895,0,42900,11,42923,76,43052,3,43066,5,43128,7,43205,8,43226,5,43260,3,43348,10,43389,2,43470,0,43482,3,43488,31,43575,8,43598,1,43610,1,43644,3,43715,23,43767,9,43783,1,43791,1,43799,8,43815,0,43823,144,44014,1,44026,5,55204,11,55239,3,55292,3,64110,1,64218,37,64263,11,64280,4,64311,0,64317,0,64319,0,64322,0,64325,0,64450,16,64832,15,64912,1,64968,39,65022,1,65050,5,65063,8,65107,0,65127,0,65132,3,65141,0,65277,1,65280,0,65471,2,65480,1,65488,1,65496,1,65501,2,65511,0,65519,9,65534,1,65548,0,65575,0,65595,0,65598,0,65614,1,65630,33,65787,4,65795,3,65844,2,65931,4,65948,51,66046,129,66205,2,66257,46,66335,0,66340,11,66379,52,66462,0,66500,3,66518,41,66718,1,66730,853,67590,1,67593,0,67638,0,67641,2,67645,1,67670,0,67680,159,67868,2,67898,4,67904,63,68024,5,68032,63,68100,0,68103,4,68116,0,68120,0,68148,3,68155,3,68168,7,68185,6,68224,127,68406,2,68438,1,68467,4,68480,127,68681,534,69247,384,69710,3,69744,15,69826,13,69865,6,69882,5,69941,0,69956,59,70089,6,70106,1189,71352,7,71370,2357,74607,144,74851,12,74868,2955,78895,13264,92729,1222,94021,10,94079,15,94112,16479,110594,8189,119030,9,119079,1,119262,33,119366,185,119639,8,119666,141,119893,0,119965,0,119968,1,119971,1,119975,1,119981,0,119994,0,119996,0,120004,0,120070,0,120075,1,120085,0,120093,0,120122,0,120127,0,120133,0,120135,2,120145,0,120486,1,120780,1,120832,5631,126468,0,126496,0,126499,0,126501,1,126504,0,126515,0,126520,0,126522,0,126524,5,126531,3,126536,0,126538,0,126540,0,126544,0,126547,0,126549,1,126552,0,126554,0,126556,0,126558,0,126560,0,126563,0,126565,1,126571,0,126579,0,126584,0,126589,0,126591,0,126602,0,126620,4,126628,0,126634,0,126652,51,126706,269,127020,3,127124,11,127151,1,127167,1,127184,0,127200,31,127243,4,127279,0,127340,3,127387,74,127491,12,127547,4,127561,6,127570,173,127777,14,127798,0,127869,2,127892,11,127941,0,127947,20,127985,14,128063,0,128065,0,128248,0,128253,2,128318,1,128324,11,128360,146,128577,3,128592,47,128710,57,128884,2187,173783,40,177973,10,178206,16353,195102,722402,917506,29,917632,127,918000,65039,1048574,1,1114110,1]));
export { Cn as Unassigned };
export const Co = Object.freeze(CharSet.fromStartLengthArray([57344,6399,983040,65533,1048576,65533]));
export { Co as Private_Use };
export const Cs = Object.freeze(CharSet.fromStartLengthArray([55296,2047]));
export { Cs as Surrogate };
export const Ll = Object.freeze(CharSet.fromStartLengthArray([97,25,181,0,223,23,248,7,257,0,259,0,261,0,263,0,265,0,267,0,269,0,271,0,273,0,275,0,277,0,279,0,281,0,283,0,285,0,287,0,289,0,291,0,293,0,295,0,297,0,299,0,301,0,303,0,305,0,307,0,309,0,311,1,314,0,316,0,318,0,320,0,322,0,324,0,326,0,328,1,331,0,333,0,335,0,337,0,339,0,341,0,343,0,345,0,347,0,349,0,351,0,353,0,355,0,357,0,359,0,361,0,363,0,365,0,367,0,369,0,371,0,373,0,375,0,378,0,380,0,382,2,387,0,389,0,392,0,396,1,402,0,405,0,409,2,414,0,417,0,419,0,421,0,424,0,426,1,429,0,432,0,436,0,438,0,441,1,445,2,454,0,457,0,460,0,462,0,464,0,466,0,468,0,470,0,472,0,474,0,476,1,479,0,481,0,483,0,485,0,487,0,489,0,491,0,493,0,495,1,499,0,501,0,505,0,507,0,509,0,511,0,513,0,515,0,517,0,519,0,521,0,523,0,525,0,527,0,529,0,531,0,533,0,535,0,537,0,539,0,541,0,543,0,545,0,547,0,549,0,551,0,553,0,555,0,557,0,559,0,561,0,563,6,572,0,575,1,578,0,583,0,585,0,587,0,589,0,591,68,661,26,881,0,883,0,887,0,891,2,912,0,940,34,976,1,981,2,985,0,987,0,989,0,991,0,993,0,995,0,997,0,999,0,1001,0,1003,0,1005,0,1007,4,1013,0,1016,0,1019,1,1072,47,1121,0,1123,0,1125,0,1127,0,1129,0,1131,0,1133,0,1135,0,1137,0,1139,0,1141,0,1143,0,1145,0,1147,0,1149,0,1151,0,1153,0,1163,0,1165,0,1167,0,1169,0,1171,0,1173,0,1175,0,1177,0,1179,0,1181,0,1183,0,1185,0,1187,0,1189,0,1191,0,1193,0,1195,0,1197,0,1199,0,1201,0,1203,0,1205,0,1207,0,1209,0,1211,0,1213,0,1215,0,1218,0,1220,0,1222,0,1224,0,1226,0,1228,0,1230,1,1233,0,1235,0,1237,0,1239,0,1241,0,1243,0,1245,0,1247,0,1249,0,1251,0,1253,0,1255,0,1257,0,1259,0,1261,0,1263,0,1265,0,1267,0,1269,0,1271,0,1273,0,1275,0,1277,0,1279,0,1281,0,1283,0,1285,0,1287,0,1289,0,1291,0,1293,0,1295,0,1297,0,1299,0,1301,0,1303,0,1305,0,1307,0,1309,0,1311,0,1313,0,1315,0,1317,0,1319,0,1377,38,7424,43,7531,12,7545,33,7681,0,7683,0,7685,0,7687,0,7689,0,7691,0,7693,0,7695,0,7697,0,7699,0,7701,0,7703,0,7705,0,7707,0,7709,0,7711,0,7713,0,7715,0,7717,0,7719,0,7721,0,7723,0,7725,0,7727,0,7729,0,7731,0,7733,0,7735,0,7737,0,7739,0,7741,0,7743,0,7745,0,7747,0,7749,0,7751,0,7753,0,7755,0,7757,0,7759,0,7761,0,7763,0,7765,0,7767,0,7769,0,7771,0,7773,0,7775,0,7777,0,7779,0,7781,0,7783,0,7785,0,7787,0,7789,0,7791,0,7793,0,7795,0,7797,0,7799,0,7801,0,7803,0,7805,0,7807,0,7809,0,7811,0,7813,0,7815,0,7817,0,7819,0,7821,0,7823,0,7825,0,7827,0,7829,8,7839,0,7841,0,7843,0,7845,0,7847,0,7849,0,7851,0,7853,0,7855,0,7857,0,7859,0,7861,0,7863,0,7865,0,7867,0,7869,0,7871,0,7873,0,7875,0,7877,0,7879,0,7881,0,7883,0,7885,0,7887,0,7889,0,7891,0,7893,0,7895,0,7897,0,7899,0,7901,0,7903,0,7905,0,7907,0,7909,0,7911,0,7913,0,7915,0,7917,0,7919,0,7921,0,7923,0,7925,0,7927,0,7929,0,7931,0,7933,0,7935,8,7952,5,7968,7,7984,7,8000,5,8016,7,8032,7,8048,13,8064,7,8080,7,8096,7,8112,4,8118,1,8126,0,8130,2,8134,1,8144,3,8150,1,8160,7,8178,2,8182,1,8458,0,8462,1,8467,0,8495,0,8500,0,8505,0,8508,1,8518,3,8526,0,8580,0,11312,46,11361,0,11365,1,11368,0,11370,0,11372,0,11377,0,11379,1,11382,5,11393,0,11395,0,11397,0,11399,0,11401,0,11403,0,11405,0,11407,0,11409,0,11411,0,11413,0,11415,0,11417,0,11419,0,11421,0,11423,0,11425,0,11427,0,11429,0,11431,0,11433,0,11435,0,11437,0,11439,0,11441,0,11443,0,11445,0,11447,0,11449,0,11451,0,11453,0,11455,0,11457,0,11459,0,11461,0,11463,0,11465,0,11467,0,11469,0,11471,0,11473,0,11475,0,11477,0,11479,0,11481,0,11483,0,11485,0,11487,0,11489,0,11491,1,11500,0,11502,0,11507,0,11520,37,11559,0,11565,0,42561,0,42563,0,42565,0,42567,0,42569,0,42571,0,42573,0,42575,0,42577,0,42579,0,42581,0,42583,0,42585,0,42587,0,42589,0,42591,0,42593,0,42595,0,42597,0,42599,0,42601,0,42603,0,42605,0,42625,0,42627,0,42629,0,42631,0,42633,0,42635,0,42637,0,42639,0,42641,0,42643,0,42645,0,42647,0,42787,0,42789,0,42791,0,42793,0,42795,0,42797,0,42799,2,42803,0,42805,0,42807,0,42809,0,42811,0,42813,0,42815,0,42817,0,42819,0,42821,0,42823,0,42825,0,42827,0,42829,0,42831,0,42833,0,42835,0,42837,0,42839,0,42841,0,42843,0,42845,0,42847,0,42849,0,42851,0,42853,0,42855,0,42857,0,42859,0,42861,0,42863,0,42865,7,42874,0,42876,0,42879,0,42881,0,42883,0,42885,0,42887,0,42892,0,42894,0,42897,0,42899,0,42913,0,42915,0,42917,0,42919,0,42921,0,43002,0,64256,6,64275,4,65345,25,66600,39,119834,25,119886,6,119894,17,119938,25,119990,3,119995,0,119997,6,120005,10,120042,25,120094,25,120146,25,120198,25,120250,25,120302,25,120354,25,120406,25,120458,27,120514,24,120540,5,120572,24,120598,5,120630,24,120656,5,120688,24,120714,5,120746,24,120772,5,120779,0]));
export { Ll as Lowercase_Letter };
export const Lm = Object.freeze(CharSet.fromStartLengthArray([688,17,710,11,736,4,748,0,750,0,884,0,890,0,1369,0,1600,0,1765,1,2036,1,2042,0,2074,0,2084,0,2088,0,2417,0,3654,0,3782,0,4348,0,6103,0,6211,0,6823,0,7288,5,7468,62,7544,0,7579,36,8305,0,8319,0,8336,12,11388,1,11631,0,11823,0,12293,0,12337,4,12347,0,12445,1,12540,2,40981,0,42232,5,42508,0,42623,0,42775,8,42864,0,42888,0,43000,1,43471,0,43632,0,43741,0,43763,1,65392,0,65438,1,94099,12]));
export { Lm as Modifier_Letter };
export const Lo = Object.freeze(CharSet.fromStartLengthArray([170,0,186,0,443,0,448,3,660,0,1488,26,1520,2,1568,31,1601,9,1646,1,1649,98,1749,0,1774,1,1786,2,1791,0,1808,0,1810,29,1869,88,1969,0,1994,32,2048,21,2112,24,2208,0,2210,10,2308,53,2365,0,2384,0,2392,9,2418,5,2425,6,2437,7,2447,1,2451,21,2474,6,2482,0,2486,3,2493,0,2510,0,2524,1,2527,2,2544,1,2565,5,2575,1,2579,21,2602,6,2610,1,2613,1,2616,1,2649,3,2654,0,2674,2,2693,8,2703,2,2707,21,2730,6,2738,1,2741,4,2749,0,2768,0,2784,1,2821,7,2831,1,2835,21,2858,6,2866,1,2869,4,2877,0,2908,1,2911,2,2929,0,2947,0,2949,5,2958,2,2962,3,2969,1,2972,0,2974,1,2979,1,2984,2,2990,11,3024,0,3077,7,3086,2,3090,22,3114,9,3125,4,3133,0,3160,1,3168,1,3205,7,3214,2,3218,22,3242,9,3253,4,3261,0,3294,0,3296,1,3313,1,3333,7,3342,2,3346,40,3389,0,3406,0,3424,1,3450,5,3461,17,3482,23,3507,8,3517,0,3520,6,3585,47,3634,1,3648,5,3713,1,3716,0,3719,1,3722,0,3725,0,3732,3,3737,6,3745,2,3749,0,3751,0,3754,1,3757,3,3762,1,3773,0,3776,4,3804,3,3840,0,3904,7,3913,35,3976,4,4096,42,4159,0,4176,5,4186,3,4193,0,4197,1,4206,2,4213,12,4238,0,4304,42,4349,331,4682,3,4688,6,4696,0,4698,3,4704,40,4746,3,4752,32,4786,3,4792,6,4800,0,4802,3,4808,14,4824,56,4882,3,4888,66,4992,15,5024,84,5121,619,5743,16,5761,25,5792,74,5888,12,5902,3,5920,17,5952,17,5984,12,5998,2,6016,51,6108,0,6176,34,6212,51,6272,40,6314,0,6320,69,6400,28,6480,29,6512,4,6528,43,6593,6,6656,22,6688,52,6917,46,6981,6,7043,29,7086,1,7098,43,7168,35,7245,2,7258,29,7401,3,7406,3,7413,1,8501,3,11568,55,11648,22,11680,6,11688,6,11696,6,11704,6,11712,6,11720,6,11728,6,11736,6,12294,0,12348,0,12353,85,12447,0,12449,89,12543,0,12549,40,12593,93,12704,26,12784,15,13312,6581,19968,20940,40960,20,40982,1142,42192,39,42240,267,42512,15,42538,1,42606,0,42656,69,43003,6,43011,2,43015,3,43020,22,43072,51,43138,49,43250,5,43259,0,43274,27,43312,22,43360,28,43396,46,43520,40,43584,2,43588,7,43616,15,43633,5,43642,0,43648,47,43697,0,43701,1,43705,4,43712,0,43714,0,43739,1,43744,10,43762,0,43777,5,43785,5,43793,5,43808,6,43816,6,43968,34,44032,11171,55216,22,55243,48,63744,365,64112,105,64285,0,64287,9,64298,12,64312,4,64318,0,64320,1,64323,1,64326,107,64467,362,64848,63,64914,53,65008,11,65136,4,65142,134,65382,9,65393,44,65440,30,65474,5,65482,5,65490,5,65498,2,65536,11,65549,25,65576,18,65596,1,65599,14,65616,13,65664,122,66176,28,66208,48,66304,30,66352,16,66370,7,66432,29,66464,35,66504,7,66640,77,67584,5,67592,0,67594,43,67639,1,67644,0,67647,22,67840,21,67872,25,67968,55,68030,1,68096,0,68112,3,68117,2,68121,26,68192,28,68352,53,68416,21,68448,18,68608,72,69635,52,69763,44,69840,24,69891,35,70019,47,70081,3,71296,42,73728,878,77824,1070,92160,568,93952,68,94032,0,110592,1,126464,3,126469,26,126497,1,126500,0,126503,0,126505,9,126516,3,126521,0,126523,0,126530,0,126535,0,126537,0,126539,0,126541,2,126545,1,126548,0,126551,0,126553,0,126555,0,126557,0,126559,0,126561,1,126564,0,126567,3,126572,6,126580,3,126585,3,126590,0,126592,9,126603,16,126625,2,126629,4,126635,16,131072,42710,173824,4148,177984,221,194560,541]));
export { Lo as Other_Letter };
export const Lt = Object.freeze(CharSet.fromStartLengthArray([453,0,456,0,459,0,498,0,8072,7,8088,7,8104,7,8124,0,8140,0,8188,0]));
export { Lt as Titlecase_Letter };
export const Lu = Object.freeze(CharSet.fromStartLengthArray([65,25,192,22,216,6,256,0,258,0,260,0,262,0,264,0,266,0,268,0,270,0,272,0,274,0,276,0,278,0,280,0,282,0,284,0,286,0,288,0,290,0,292,0,294,0,296,0,298,0,300,0,302,0,304,0,306,0,308,0,310,0,313,0,315,0,317,0,319,0,321,0,323,0,325,0,327,0,330,0,332,0,334,0,336,0,338,0,340,0,342,0,344,0,346,0,348,0,350,0,352,0,354,0,356,0,358,0,360,0,362,0,364,0,366,0,368,0,370,0,372,0,374,0,376,1,379,0,381,0,385,1,388,0,390,1,393,2,398,3,403,1,406,2,412,1,415,1,418,0,420,0,422,1,425,0,428,0,430,1,433,2,437,0,439,1,444,0,452,0,455,0,458,0,461,0,463,0,465,0,467,0,469,0,471,0,473,0,475,0,478,0,480,0,482,0,484,0,486,0,488,0,490,0,492,0,494,0,497,0,500,0,502,2,506,0,508,0,510,0,512,0,514,0,516,0,518,0,520,0,522,0,524,0,526,0,528,0,530,0,532,0,534,0,536,0,538,0,540,0,542,0,544,0,546,0,548,0,550,0,552,0,554,0,556,0,558,0,560,0,562,0,570,1,573,1,577,0,579,3,584,0,586,0,588,0,590,0,880,0,882,0,886,0,902,0,904,2,908,0,910,1,913,16,931,8,975,0,978,2,984,0,986,0,988,0,990,0,992,0,994,0,996,0,998,0,1000,0,1002,0,1004,0,1006,0,1012,0,1015,0,1017,1,1021,50,1120,0,1122,0,1124,0,1126,0,1128,0,1130,0,1132,0,1134,0,1136,0,1138,0,1140,0,1142,0,1144,0,1146,0,1148,0,1150,0,1152,0,1162,0,1164,0,1166,0,1168,0,1170,0,1172,0,1174,0,1176,0,1178,0,1180,0,1182,0,1184,0,1186,0,1188,0,1190,0,1192,0,1194,0,1196,0,1198,0,1200,0,1202,0,1204,0,1206,0,1208,0,1210,0,1212,0,1214,0,1216,1,1219,0,1221,0,1223,0,1225,0,1227,0,1229,0,1232,0,1234,0,1236,0,1238,0,1240,0,1242,0,1244,0,1246,0,1248,0,1250,0,1252,0,1254,0,1256,0,1258,0,1260,0,1262,0,1264,0,1266,0,1268,0,1270,0,1272,0,1274,0,1276,0,1278,0,1280,0,1282,0,1284,0,1286,0,1288,0,1290,0,1292,0,1294,0,1296,0,1298,0,1300,0,1302,0,1304,0,1306,0,1308,0,1310,0,1312,0,1314,0,1316,0,1318,0,1329,37,4256,37,4295,0,4301,0,7680,0,7682,0,7684,0,7686,0,7688,0,7690,0,7692,0,7694,0,7696,0,7698,0,7700,0,7702,0,7704,0,7706,0,7708,0,7710,0,7712,0,7714,0,7716,0,7718,0,7720,0,7722,0,7724,0,7726,0,7728,0,7730,0,7732,0,7734,0,7736,0,7738,0,7740,0,7742,0,7744,0,7746,0,7748,0,7750,0,7752,0,7754,0,7756,0,7758,0,7760,0,7762,0,7764,0,7766,0,7768,0,7770,0,7772,0,7774,0,7776,0,7778,0,7780,0,7782,0,7784,0,7786,0,7788,0,7790,0,7792,0,7794,0,7796,0,7798,0,7800,0,7802,0,7804,0,7806,0,7808,0,7810,0,7812,0,7814,0,7816,0,7818,0,7820,0,7822,0,7824,0,7826,0,7828,0,7838,0,7840,0,7842,0,7844,0,7846,0,7848,0,7850,0,7852,0,7854,0,7856,0,7858,0,7860,0,7862,0,7864,0,7866,0,7868,0,7870,0,7872,0,7874,0,7876,0,7878,0,7880,0,7882,0,7884,0,7886,0,7888,0,7890,0,7892,0,7894,0,7896,0,7898,0,7900,0,7902,0,7904,0,7906,0,7908,0,7910,0,7912,0,7914,0,7916,0,7918,0,7920,0,7922,0,7924,0,7926,0,7928,0,7930,0,7932,0,7934,0,7944,7,7960,5,7976,7,7992,7,8008,5,8025,0,8027,0,8029,0,8031,0,8040,7,8120,3,8136,3,8152,3,8168,4,8184,3,8450,0,8455,0,8459,2,8464,2,8469,0,8473,4,8484,0,8486,0,8488,0,8490,3,8496,3,8510,1,8517,0,8579,0,11264,46,11360,0,11362,2,11367,0,11369,0,11371,0,11373,3,11378,0,11381,0,11390,2,11394,0,11396,0,11398,0,11400,0,11402,0,11404,0,11406,0,11408,0,11410,0,11412,0,11414,0,11416,0,11418,0,11420,0,11422,0,11424,0,11426,0,11428,0,11430,0,11432,0,11434,0,11436,0,11438,0,11440,0,11442,0,11444,0,11446,0,11448,0,11450,0,11452,0,11454,0,11456,0,11458,0,11460,0,11462,0,11464,0,11466,0,11468,0,11470,0,11472,0,11474,0,11476,0,11478,0,11480,0,11482,0,11484,0,11486,0,11488,0,11490,0,11499,0,11501,0,11506,0,42560,0,42562,0,42564,0,42566,0,42568,0,42570,0,42572,0,42574,0,42576,0,42578,0,42580,0,42582,0,42584,0,42586,0,42588,0,42590,0,42592,0,42594,0,42596,0,42598,0,42600,0,42602,0,42604,0,42624,0,42626,0,42628,0,42630,0,42632,0,42634,0,42636,0,42638,0,42640,0,42642,0,42644,0,42646,0,42786,0,42788,0,42790,0,42792,0,42794,0,42796,0,42798,0,42802,0,42804,0,42806,0,42808,0,42810,0,42812,0,42814,0,42816,0,42818,0,42820,0,42822,0,42824,0,42826,0,42828,0,42830,0,42832,0,42834,0,42836,0,42838,0,42840,0,42842,0,42844,0,42846,0,42848,0,42850,0,42852,0,42854,0,42856,0,42858,0,42860,0,42862,0,42873,0,42875,0,42877,1,42880,0,42882,0,42884,0,42886,0,42891,0,42893,0,42896,0,42898,0,42912,0,42914,0,42916,0,42918,0,42920,0,42922,0,65313,25,66560,39,119808,25,119860,25,119912,25,119964,0,119966,1,119970,0,119973,1,119977,3,119982,7,120016,25,120068,1,120071,3,120077,7,120086,6,120120,1,120123,3,120128,4,120134,0,120138,6,120172,25,120224,25,120276,25,120328,25,120380,25,120432,25,120488,24,120546,24,120604,24,120662,24,120720,24,120778,0]));
export { Lu as Uppercase_Letter };
export const Mc = Object.freeze(CharSet.fromStartLengthArray([2307,0,2363,0,2366,2,2377,3,2382,1,2434,1,2494,2,2503,1,2507,1,2519,0,2563,0,2622,2,2691,0,2750,2,2761,0,2763,1,2818,1,2878,0,2880,0,2887,1,2891,1,2903,0,3006,1,3009,1,3014,2,3018,2,3031,0,3073,2,3137,3,3202,1,3262,0,3264,4,3271,1,3274,1,3285,1,3330,1,3390,2,3398,2,3402,2,3415,0,3458,1,3535,2,3544,7,3570,1,3902,1,3967,0,4139,1,4145,0,4152,0,4155,1,4182,1,4194,2,4199,6,4227,1,4231,5,4239,0,4250,2,6070,0,6078,7,6087,1,6435,3,6441,2,6448,1,6451,5,6576,16,6600,1,6681,2,6741,0,6743,0,6753,0,6755,1,6765,5,6916,0,6965,0,6971,0,6973,4,6979,1,7042,0,7073,0,7078,1,7082,0,7084,1,7143,0,7146,2,7150,0,7154,1,7204,7,7220,1,7393,0,7410,1,12334,1,43043,1,43047,0,43136,1,43188,15,43346,1,43395,0,43444,1,43450,1,43453,3,43567,1,43571,1,43597,0,43643,0,43755,0,43758,1,43765,0,44003,1,44006,1,44009,1,44012,0,69632,0,69634,0,69762,0,69808,2,69815,1,69932,0,70018,0,70067,2,70079,1,71340,0,71342,1,71350,0,94033,45,119141,1,119149,5]));
export { Mc as Spacing_Mark };
export const Me = Object.freeze(CharSet.fromStartLengthArray([1160,1,8413,3,8418,2,42608,2]));
export { Me as Enclosing_Mark };
export const Mn = Object.freeze(CharSet.fromStartLengthArray([768,111,1155,4,1425,44,1471,0,1473,1,1476,1,1479,0,1552,10,1611,20,1648,0,1750,6,1759,5,1767,1,1770,3,1809,0,1840,26,1958,10,2027,8,2070,3,2075,8,2085,2,2089,4,2137,2,2276,26,2304,2,2362,0,2364,0,2369,7,2381,0,2385,6,2402,1,2433,0,2492,0,2497,3,2509,0,2530,1,2561,1,2620,0,2625,1,2631,1,2635,2,2641,0,2672,1,2677,0,2689,1,2748,0,2753,4,2759,1,2765,0,2786,1,2817,0,2876,0,2879,0,2881,3,2893,0,2902,0,2914,1,2946,0,3008,0,3021,0,3134,2,3142,2,3146,3,3157,1,3170,1,3260,0,3263,0,3270,0,3276,1,3298,1,3393,3,3405,0,3426,1,3530,0,3538,2,3542,0,3633,0,3636,6,3655,7,3761,0,3764,5,3771,1,3784,5,3864,1,3893,0,3895,0,3897,0,3953,13,3968,4,3974,1,3981,10,3993,35,4038,0,4141,3,4146,5,4153,1,4157,1,4184,1,4190,2,4209,3,4226,0,4229,1,4237,0,4253,0,4957,2,5906,2,5938,2,5970,1,6002,1,6068,1,6071,6,6086,0,6089,10,6109,0,6155,2,6313,0,6432,2,6439,1,6450,0,6457,2,6679,1,6742,0,6744,6,6752,0,6754,0,6757,7,6771,9,6783,0,6912,3,6964,0,6966,4,6972,0,6978,0,7019,8,7040,1,7074,3,7080,1,7083,0,7142,0,7144,1,7149,0,7151,2,7212,7,7222,1,7376,2,7380,12,7394,6,7405,0,7412,0,7616,38,7676,3,8400,12,8417,0,8421,11,11503,2,11647,0,11744,31,12330,3,12441,1,42607,0,42612,9,42655,0,42736,1,43010,0,43014,0,43019,0,43045,1,43204,0,43232,17,43302,7,43335,10,43392,2,43443,0,43446,3,43452,0,43561,5,43569,1,43573,1,43587,0,43596,0,43696,0,43698,2,43703,1,43710,1,43713,0,43756,1,43766,0,44005,0,44008,0,44013,0,64286,0,65024,15,65056,6,66045,0,68097,2,68101,1,68108,3,68152,2,68159,0,69633,0,69688,14,69760,1,69811,3,69817,1,69888,2,69927,4,69933,7,70016,1,70070,8,71339,0,71341,0,71344,5,71351,0,94095,3,119143,2,119163,7,119173,6,119210,3,119362,2,917760,239]));
export { Mn as Nonspacing_Mark };
export const Nd = Object.freeze(CharSet.fromStartLengthArray([48,9,1632,9,1776,9,1984,9,2406,9,2534,9,2662,9,2790,9,2918,9,3046,9,3174,9,3302,9,3430,9,3664,9,3792,9,3872,9,4160,9,4240,9,6112,9,6160,9,6470,9,6608,9,6784,9,6800,9,6992,9,7088,9,7232,9,7248,9,42528,9,43216,9,43264,9,43472,9,43600,9,44016,9,65296,9,66720,9,69734,9,69872,9,69942,9,70096,9,71360,9,120782,49]));
export { Nd as Decimal_Number };
export { Nd as digit };
export const Nl = Object.freeze(CharSet.fromStartLengthArray([5870,2,8544,34,8581,3,12295,0,12321,8,12344,2,42726,9,65856,52,66369,0,66378,0,66513,4,74752,98]));
export { Nl as Letter_Number };
export const No = Object.freeze(CharSet.fromStartLengthArray([178,1,185,0,188,2,2548,5,2930,5,3056,2,3192,6,3440,5,3882,9,4969,19,6128,9,6618,0,8304,0,8308,5,8320,9,8528,15,8585,0,9312,59,9450,21,10102,29,11517,0,12690,3,12832,9,12872,7,12881,14,12928,9,12977,14,43056,5,65799,44,65909,3,65930,0,66336,3,67672,7,67862,5,68160,7,68221,1,68440,7,68472,7,69216,30,69714,19,119648,17,127232,10]));
export { No as Other_Number };
export const Pc = Object.freeze(CharSet.fromStartLengthArray([95,0,8255,1,8276,0,65075,1,65101,2,65343,0]));
export { Pc as Connector_Punctuation };
export const Pd = Object.freeze(CharSet.fromStartLengthArray([45,0,1418,0,1470,0,5120,0,6150,0,8208,5,11799,0,11802,0,11834,1,12316,0,12336,0,12448,0,65073,1,65112,0,65123,0,65293,0]));
export { Pd as Dash_Punctuation };
export const Pe = Object.freeze(CharSet.fromStartLengthArray([41,0,93,0,125,0,3899,0,3901,0,5788,0,8262,0,8318,0,8334,0,9002,0,10089,0,10091,0,10093,0,10095,0,10097,0,10099,0,10101,0,10182,0,10215,0,10217,0,10219,0,10221,0,10223,0,10628,0,10630,0,10632,0,10634,0,10636,0,10638,0,10640,0,10642,0,10644,0,10646,0,10648,0,10713,0,10715,0,10749,0,11811,0,11813,0,11815,0,11817,0,12297,0,12299,0,12301,0,12303,0,12305,0,12309,0,12311,0,12313,0,12315,0,12318,1,64831,0,65048,0,65078,0,65080,0,65082,0,65084,0,65086,0,65088,0,65090,0,65092,0,65096,0,65114,0,65116,0,65118,0,65289,0,65341,0,65373,0,65376,0,65379,0]));
export { Pe as Close_Punctuation };
export const Pf = Object.freeze(CharSet.fromStartLengthArray([187,0,8217,0,8221,0,8250,0,11779,0,11781,0,11786,0,11789,0,11805,0,11809,0]));
export { Pf as Final_Punctuation };
export const Pi = Object.freeze(CharSet.fromStartLengthArray([171,0,8216,0,8219,1,8223,0,8249,0,11778,0,11780,0,11785,0,11788,0,11804,0,11808,0]));
export { Pi as Initial_Punctuation };
export const Po = Object.freeze(CharSet.fromStartLengthArray([33,2,37,2,42,0,44,0,46,1,58,1,63,1,92,0,161,0,167,0,182,1,191,0,894,0,903,0,1370,5,1417,0,1472,0,1475,0,1478,0,1523,1,1545,1,1548,1,1563,0,1566,1,1642,3,1748,0,1792,13,2039,2,2096,14,2142,0,2404,1,2416,0,2800,0,3572,0,3663,0,3674,1,3844,14,3860,0,3973,0,4048,4,4057,1,4170,5,4347,0,4960,8,5741,1,5867,2,5941,1,6100,2,6104,2,6144,5,6151,3,6468,1,6686,1,6816,6,6824,5,7002,6,7164,3,7227,4,7294,1,7360,7,7379,0,8214,1,8224,7,8240,8,8251,3,8257,2,8263,10,8275,0,8277,9,11513,3,11518,1,11632,0,11776,1,11782,2,11787,0,11790,8,11800,1,11803,0,11806,1,11818,4,11824,9,12289,2,12349,0,12539,0,42238,1,42509,2,42611,0,42622,0,42738,5,43124,3,43214,1,43256,2,43310,1,43359,0,43457,12,43486,1,43612,3,43742,1,43760,1,44011,0,65040,6,65049,0,65072,0,65093,1,65097,3,65104,2,65108,3,65119,2,65128,0,65130,1,65281,2,65285,2,65290,0,65292,0,65294,1,65306,1,65311,1,65340,0,65377,0,65380,1,65792,2,66463,0,66512,0,67671,0,67871,0,67903,0,68176,8,68223,0,68409,6,69703,6,69819,1,69822,3,69952,3,70085,3,74864,3]));
export { Po as Other_Punctuation };
export const Ps = Object.freeze(CharSet.fromStartLengthArray([40,0,91,0,123,0,3898,0,3900,0,5787,0,8218,0,8222,0,8261,0,8317,0,8333,0,9001,0,10088,0,10090,0,10092,0,10094,0,10096,0,10098,0,10100,0,10181,0,10214,0,10216,0,10218,0,10220,0,10222,0,10627,0,10629,0,10631,0,10633,0,10635,0,10637,0,10639,0,10641,0,10643,0,10645,0,10647,0,10712,0,10714,0,10748,0,11810,0,11812,0,11814,0,11816,0,12296,0,12298,0,12300,0,12302,0,12304,0,12308,0,12310,0,12312,0,12314,0,12317,0,64830,0,65047,0,65077,0,65079,0,65081,0,65083,0,65085,0,65087,0,65089,0,65091,0,65095,0,65113,0,65115,0,65117,0,65288,0,65339,0,65371,0,65375,0,65378,0]));
export { Ps as Open_Punctuation };
export const Sc = Object.freeze(CharSet.fromStartLengthArray([36,0,162,3,1423,0,1547,0,2546,1,2555,0,2801,0,3065,0,3647,0,6107,0,8352,26,43064,0,65020,0,65129,0,65284,0,65504,1,65509,1]));
export { Sc as Currency_Symbol };
export const Sk = Object.freeze(CharSet.fromStartLengthArray([94,0,96,0,168,0,175,0,180,0,184,0,706,3,722,13,741,6,749,0,751,16,885,0,900,1,8125,0,8127,2,8141,2,8157,2,8173,2,8189,1,12443,1,42752,22,42784,1,42889,1,64434,15,65342,0,65344,0,65507,0]));
export { Sk as Modifier_Symbol };
export const Sm = Object.freeze(CharSet.fromStartLengthArray([43,0,60,2,124,0,126,0,172,0,177,0,215,0,247,0,1014,0,1542,2,8260,0,8274,0,8314,2,8330,2,8472,0,8512,4,8523,0,8592,4,8602,1,8608,0,8611,0,8614,0,8622,0,8654,1,8658,0,8660,0,8692,267,8968,3,8992,1,9084,0,9115,24,9180,5,9655,0,9665,0,9720,7,9839,0,10176,4,10183,30,10224,15,10496,130,10649,62,10716,31,10750,257,11056,20,11079,5,64297,0,65122,0,65124,2,65291,0,65308,2,65372,0,65374,0,65506,0,65513,3,120513,0,120539,0,120571,0,120597,0,120629,0,120655,0,120687,0,120713,0,120745,0,120771,0,126704,1]));
export { Sm as Math_Symbol };
export const So = Object.freeze(CharSet.fromStartLengthArray([166,0,169,0,174,0,176,0,1154,0,1550,1,1758,0,1769,0,1789,1,2038,0,2554,0,2928,0,3059,5,3066,0,3199,0,3449,0,3841,2,3859,0,3861,2,3866,5,3892,0,3894,0,3896,0,4030,7,4039,5,4046,1,4053,3,4254,1,5008,9,6464,0,6622,33,7009,9,7028,8,8448,1,8451,3,8456,1,8468,0,8470,1,8478,5,8485,0,8487,0,8489,0,8494,0,8506,1,8522,0,8524,1,8527,0,8597,4,8604,3,8609,1,8612,1,8615,6,8623,30,8656,1,8659,0,8661,30,8960,7,8972,19,8994,6,9003,80,9085,29,9140,39,9186,17,9216,38,9280,10,9372,77,9472,182,9656,8,9666,53,9728,110,9840,143,9985,102,10132,43,10240,255,11008,47,11077,1,11088,9,11493,5,11904,25,11931,88,12032,213,12272,11,12292,0,12306,1,12320,0,12342,1,12350,1,12688,1,12694,9,12736,35,12800,30,12842,29,12880,0,12896,31,12938,38,12992,62,13056,255,19904,63,42128,54,43048,3,43062,1,43065,0,43639,2,65021,0,65508,0,65512,0,65517,1,65532,1,65847,8,65913,16,65936,11,66000,44,118784,245,119040,38,119081,59,119146,2,119171,1,119180,29,119214,47,119296,65,119365,0,119552,86,126976,43,127024,99,127136,14,127153,13,127169,14,127185,14,127248,30,127280,59,127344,42,127462,28,127504,42,127552,8,127568,1,127744,32,127792,5,127799,69,127872,19,127904,36,127942,4,127968,16,128000,62,128064,0,128066,181,128249,3,128256,61,128320,3,128336,23,128507,69,128581,10,128640,69,128768,115]));
export { So as Other_Symbol };
export const Zl = Object.freeze(CharSet.fromStartLengthArray([8232,0]));
export { Zl as Line_Separator };
export const Zp = Object.freeze(CharSet.fromStartLengthArray([8233,0]));
export { Zp as Paragraph_Separator };
export const Zs = Object.freeze(CharSet.fromStartLengthArray([32,0,160,0,5760,0,6158,0,8192,10,8239,0,8287,0,12288,0]));
export { Zs as Space_Separator };
export default function (value: string): ReadonlyCharSet | undefined {
    switch (value) {
        case "Cc":
        case "Control":
        case "cntrl":
            return Cc;
        case "Cf":
        case "Format":
            return Cf;
        case "Cn":
        case "Unassigned":
            return Cn;
        case "Co":
        case "Private_Use":
            return Co;
        case "Cs":
        case "Surrogate":
            return Cs;
        case "Ll":
        case "Lowercase_Letter":
            return Ll;
        case "Lm":
        case "Modifier_Letter":
            return Lm;
        case "Lo":
        case "Other_Letter":
            return Lo;
        case "Lt":
        case "Titlecase_Letter":
            return Lt;
        case "Lu":
        case "Uppercase_Letter":
            return Lu;
        case "Mc":
        case "Spacing_Mark":
            return Mc;
        case "Me":
        case "Enclosing_Mark":
            return Me;
        case "Mn":
        case "Nonspacing_Mark":
            return Mn;
        case "Nd":
        case "Decimal_Number":
        case "digit":
            return Nd;
        case "Nl":
        case "Letter_Number":
            return Nl;
        case "No":
        case "Other_Number":
            return No;
        case "Pc":
        case "Connector_Punctuation":
            return Pc;
        case "Pd":
        case "Dash_Punctuation":
            return Pd;
        case "Pe":
        case "Close_Punctuation":
            return Pe;
        case "Pf":
        case "Final_Punctuation":
            return Pf;
        case "Pi":
        case "Initial_Punctuation":
            return Pi;
        case "Po":
        case "Other_Punctuation":
            return Po;
        case "Ps":
        case "Open_Punctuation":
            return Ps;
        case "Sc":
        case "Currency_Symbol":
            return Sc;
        case "Sk":
        case "Modifier_Symbol":
            return Sk;
        case "Sm":
        case "Math_Symbol":
            return Sm;
        case "So":
        case "Other_Symbol":
            return So;
        case "Zl":
        case "Line_Separator":
            return Zl;
        case "Zp":
        case "Paragraph_Separator":
            return Zp;
        case "Zs":
        case "Space_Separator":
            return Zs;
    }
    return undefined;
}
